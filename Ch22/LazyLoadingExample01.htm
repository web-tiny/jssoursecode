<!DOCTYPE html>
<html>

<head>
    <title>Lazy Loading Example</title>
</head>

<body>
    <script type="text/javascript">
        /**
         * 惰性载入函数（函数执行的分支仅会发生一次）
         * 即使只有一个if语句的代码，也肯定要比没有if语句的慢，所以如果if语句不必每次执行，那么代码可以运行得更快一些。那这咋整呢？解决方案就是：惰性载入函数
         * 第一种方式：在函数被调用时再处理函数
         * 
         * */
        function createXHR() {
            if (typeof XMLHttpRequest != "undefined") {
                createXHR = function () {
                    return new XMLHttpRequest();
                };
            } else if (typeof ActiveXObject != "undefined") {
                createXHR = function () {
                    if (typeof arguments.callee.activeXString != "string") {
                        var versions = ["MSXML2.XMLHttp.6.0", "MSXML2.XMLHttp.3.0",
                            "MSXML2.XMLHttp"],
                            i, len;

                        for (i = 0, len = versions.length; i < len; i++) {
                            try {
                                new ActiveXObject(versions[i]);
                                arguments.callee.activeXString = versions[i];
                            } catch (ex) {
                                //skip
                            }
                        }
                    }

                    return new ActiveXObject(arguments.callee.activeXString);
                };
            } else {
                createXHR = function () {
                    throw new Error("No XHR object available.");
                };
            }

            return createXHR();
        }

        var xhr1 = createXHR();
        var xhr2 = createXHR();

    </script>
</body>

</html>